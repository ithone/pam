<?php
	// Entity class generated automatically by MDA process
	namespace MyCompany\MyProject\AppBundle\Entity;

	use Doctrine\ORM\Mapping as ORM;
	use JMS\SecurityExtraBundle\Annotation\Secure;
	use Symfony\Component\Validator\Constraints as Assert;
	use Symfony\Bridge\Doctrine\Validator\Constraints as DoctrineAssert;
	use Doctrine\Common\Collections\ArrayCollection;

	/**
 	* MyCompany\MyProject\AppBundle\Entity\PamFiliale
 	*
 	* @ORM\Table(name="pam_filiale")
 	* @ORM\Entity(repositoryClass="MyCompany\MyProject\AppBundle\Repository\PamFilialeRepository")
	* */
   	class PamFiliale
	{	
		// MDA Generated variables (used for internal entity management)
		private $error = '';
		public $validCurrency = true;
		public $validLabel = true;
		public $validName = true;
		public $validPays = true;
		public $validZone = true;

		/**
     	* @var bigint $id
     	*
     	* @ORM\Column(name="id", type="bigint", nullable=false)
     	* @ORM\Id
     	* @ORM\GeneratedValue(strategy="IDENTITY")
     	*/
    	private $id;
		/**
     	* @var string $currency
     	*
     	* @ORM\Column(name="currency", type="string" ,length=3,nullable=false)
     	*/
    	private $currency;
		/**
     	* @var string $label
     	*
     	* @ORM\Column(name="label", type="string" ,length=50,nullable=false, unique=true)
     	*/
    	private $label;
		/**
     	* @var string $name
     	*
     	* @ORM\Column(name="name", type="string" ,length=15,nullable=false, unique=true)
     	*/
    	private $name;
		/**
     	* @var Pays
     	* @ORM\ManyToOne(targetEntity="PamPays")
     	* @ORM\JoinColumns({
     	* @ORM\JoinColumn(name="pays_id", referencedColumnName="id", unique=true)
     	* })
		*/
		private $pays;		
		/**
     	* @var Zone
     	* @ORM\ManyToOne(targetEntity="PamZone")
     	* @ORM\JoinColumns({
     	* @ORM\JoinColumn(name="zone_id", referencedColumnName="id", unique=true)
     	* })
		*/
		private $zone;		
		public function __construct()
    	{
		}
	
		/**
     	* Get id
     	*
     	* @return bigint 
     	*/
    	public function getId()
    	{
        	return $this->id;
    	}
    	public function setId($id)
    	{
        	$this->id = $id;
    	}
		/**
     	* Get Name 
		* by Id (automatic get generated by Symfony
     	*        when form display choice list)
     	* @return string
     	*/		
		public function __toString() {
			return $this->getName();
		}
		/**
     	* Get currency
     	*
     	* @return string 
     	*/
     	public function getCurrency() {
       		return $this->currency;
     	}
		/**
     	* Get pays
     	*
     	* @return MyCompany\MyProject\AppBundle\Entity\PamPays 
     	*/
     	public function getPays() {
       		return $this->pays;
     	}
		/**
     	* Get zone
     	*
     	* @return MyCompany\MyProject\AppBundle\Entity\PamZone 
     	*/
     	public function getZone() {
       		return $this->zone;
     	}
		/**
     	* Get label
     	*
     	* @return string 
     	*/
     	public function getLabel() {
       		return $this->label;
     	}
		/**
     	* Get name
     	*
     	* @return string 
     	*/
     	public function getName() {
       		return $this->name;
     	}
		/**
     	* Set currency
     	*
     	* @param string $currency
     	*/ 
     	public function setCurrency($currency) {
			$this->currency=$currency;  
  	 	}	
		/**
     	* Set label
     	*
     	* @param string $label
     	*/ 
     	public function setLabel($label) {
			$this->label=$label;  
  	 	}	
		/**
     	* Set name
     	*
     	* @param string $name
     	*/ 
     	public function setName($name) {
			$this->name=$name;  
  	 	}	
		/**
     	* Set pays
     	*
     	* @param MyCompany\MyProject\AppBundle\Entity\PamPays $pays
     	*/ 
     	public function setPays(\MyCompany\MyProject\AppBundle\Entity\PamPays $pays) {
       		$this->pays=$pays;  
  	 	}
		/**
     	* Set zone
     	*
     	* @param MyCompany\MyProject\AppBundle\Entity\PamZone $zone
     	*/ 
     	public function setZone(\MyCompany\MyProject\AppBundle\Entity\PamZone $zone) {
       		$this->zone=$zone;  
  	 	}
		// Object validation function (see Resources/config/validation.yml)
		public function isCurrencyValid() {
			$rc = true; $errorMgr = $this; $errorMsg = ''; 
			$this->validCurrency = true;
			/*==============START OF VALIDATION RULE====================*/ 
			
			/*==============END OF VALIDATION RULE======================*/
			if(!$rc) {
				$errorMgr->setError($errorMsg);
				$this->validCurrency = false;
				return $rc;
			}
		}
		// Object validation function (see Resources/config/validation.yml)
		public function isLabelValid() {
			$rc = true; $errorMgr = $this; $errorMsg = ''; 
			$this->validLabel = true;
			/*==============START OF VALIDATION RULE====================*/ 
			
			/*==============END OF VALIDATION RULE======================*/
			if(!$rc) {
				$errorMgr->setError($errorMsg);
				$this->validLabel = false;
				return $rc;
			}
		}
		// Object validation function (see Resources/config/validation.yml)
		public function isNameValid() {
			$rc = true; $errorMgr = $this; $errorMsg = ''; 
			$this->validName = true;
			/*==============START OF VALIDATION RULE====================*/ 
			
			/*==============END OF VALIDATION RULE======================*/
			if(!$rc) {
				$errorMgr->setError($errorMsg);
				$this->validName = false;
				return $rc;
			}
		}
		// Object validation function (see Resources/config/validation.yml)
		public function isPaysValid() {
			$rc = true; $errorMgr = $this; $errorMsg = ''; 
			$this->validPays = true;
			/*==============START OF VALIDATION RULE====================*/ 
			
			/*==============END OF VALIDATION RULE======================*/
			if(!$rc) {
				$errorMgr->setError($errorMsg);
				$this->validPays = false;
				return $rc;
			}
		}
		// Object validation function (see Resources/config/validation.yml)
		public function isZoneValid() {
			$rc = true; $errorMgr = $this; $errorMsg = ''; 
			$this->validZone = true;
			/*==============START OF VALIDATION RULE====================*/ 
			
			/*==============END OF VALIDATION RULE======================*/
			if(!$rc) {
				$errorMgr->setError($errorMsg);
				$this->validZone = false;
				return $rc;
			}
		}
		public function setError($error) {
			$this->error = $error;
		}
		public function getError() {
			return $this->error;
		}
   }
?>
